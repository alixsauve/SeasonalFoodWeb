# In this script, we infer the attack rates as defined in a functional response of type I.
rm(list=ls(all=TRUE))
library(RColorBrewer)
E <- 0.1 # conversion efficiency
# define working directories
DAT_DIR <- "../../Data/BPF_Data"
WK_DIR <- "../../Data/ProcessedData"
PAR_DIR <- "../../Parameterisation/OutputTables"
# load data
setwd(DAT_DIR)
PredInfo <- read.csv("Table5-1.csv", header = TRUE, dec = ",", stringsAsFactors = FALSE)
SubsetFW <- read.csv("IntListSubsets.csv", header = TRUE, stringsAsFactors = FALSE)
setwd(WK_DIR)
IntakePrey <- read.csv("PerCapitaIntakePreyBiomass.csv", header = TRUE, stringsAsFactors = FALSE)
SpDensSeason <- read.csv("SpDensitySeasonsFinal.csv", header = TRUE, stringsAsFactors = FALSE)
# species list
PreyList <- sort(SpDensSeason$Taxon[SpDensSeason$Trophic_level == "Prey"])
PredList <- sort(PredInfo$Taxon)
NPred <- nrow(PredInfo)
SpDensSeason <- SpDensSeason[match(c(PredList, PreyList), SpDensSeason$Taxon),]
# here we force predators' impact to be 0 if the bird migrates during winter
IntakePrey$IntakePrey_W[SpDensSeason$IsMigratoryBird[match(IntakePrey$LowerTaxon, SpDensSeason$Taxon)]] <- 0
# some numbers on community size
IntakePrey$IntNo <- 1:nrow(IntakePrey)
# summer
IntakePreySummer <- subset(IntakePrey, IntakePrey_S > 0)
PreySummer <- unique(IntakePreySummer$LowerTaxon)
PredSummer <- unique(IntakePreySummer$UpperTaxon)
# winter
IntakePreyWinter <- subset(IntakePrey, IntakePrey_W > 0)
PreyWinter <- unique(IntakePreyWinter$LowerTaxon)
PredWinter <- unique(IntakePreyWinter$UpperTaxon)
# shared species and interactions
length(intersect(PredWinter, PredSummer))
length(intersect(PreyWinter, PreySummer))
length(intersect(IntakePreySummer$IntNo, IntakePreyWinter$IntNo))
# season specific species and interactions
length(which(!PreySummer %in% PreyWinter))
length(which(!PredSummer %in% PredWinter))
length(which(!(IntakePreySummer$IntNo %in% IntakePreyWinter$IntNo)))
# specific to winter
length(which(!PreyWinter %in% PreySummer))
length(which(!PredWinter %in% PredSummer))
length(which(!(IntakePreyWinter$IntNo %in% IntakePreySummer$IntNo)))
FracS <- 168/365
FracW <- 197/365
# make sure that SubsetFW contains the same prey than SpDensSeason
IndexInt <- which((!is.na(match(SubsetFW$LowerTaxon, IntakePrey$LowerTaxon))) &
(!is.na(match(SubsetFW$UpperTaxon, IntakePrey$UpperTaxon))))
SubsetFW <- SubsetFW[IndexInt,]
# calculate attack rate for each interaction
# create and initiate two columns for attack rates
IntakePrey$AttackRate_S <- NA; IntakePrey$AttackRate_W <- NA
for (Sp in PredList){
# list of prey
PreyOfSp <- sort(unique(IntakePrey$LowerTaxon[IntakePrey$UpperTaxon == Sp]))
# their densities
DensPrey_S <- SpDensSeason$Summer_density[match(PreyOfSp, SpDensSeason$Taxon)]
DensPrey_W <- SpDensSeason$Winter_density[match(PreyOfSp, SpDensSeason$Taxon)]
# prey for which seasonal densities are missing
IndexMissingDens <- which((is.na(DensPrey_S)) & (is.na(DensPrey_W)))# & (is.na(DensPrey_Sp)))
DensPrey_S[IndexMissingDens] <- SpDensSeason$Mean_density[match(PreyOfSp[IndexMissingDens], SpDensSeason$Taxon)]
DensPrey_W[IndexMissingDens] <- DensPrey_S[IndexMissingDens]
# their body masses
BodyMassPrey <- SpDensSeason$Body_mass[match(PreyOfSp, SpDensSeason$Taxon)]
# their biomass
BiomassPrey_S <- DensPrey_S*BodyMassPrey
BiomassPrey_W <- DensPrey_W*BodyMassPrey
# for taxa with fixed densities
IndexFixedDens <- which((PreyOfSp == "Carcass") | (PreyOfSp == "Hymenoptera") | (PreyOfSp == "Lumbricidae_sp."))
BiomassPrey_S[IndexFixedDens] <- 1; BiomassPrey_W[IndexFixedDens] <- 1; #BiomassPrey_Sp[IndexFixedDens] <- 1
# the attack rates
IntakePrey$AttackRate_S[IntakePrey$UpperTaxon == Sp] <- IntakePrey$IntakePrey_S[IntakePrey$UpperTaxon == Sp] / (FracS*BiomassPrey_S)
IntakePrey$AttackRate_W[IntakePrey$UpperTaxon == Sp] <- IntakePrey$IntakePrey_W[IntakePrey$UpperTaxon == Sp] / (FracW*BiomassPrey_W)
}
which((IntakePrey$AttackRate_W == 0) & (IntakePrey$IntakePrey_W != 0))
# some species are predated specifically during winter, but we do not know their densities during winter
# we use then their spring densities
IndexWSpecificInt <- which((IntakePrey$IntakePrey_S == 0) & (IntakePrey$IntakePrey_W != 0) & (is.na(IntakePrey$AttackRate_W)))
DensSpOfWSpecificInt <- SpDensSeason$Spring_density[match(IntakePrey$LowerTaxon[IndexWSpecificInt], SpDensSeason$Taxon)]
BodyMassSpOfWSpecificInt <- SpDensSeason$Body_mass[match(IntakePrey$LowerTaxon[IndexWSpecificInt], SpDensSeason$Taxon)]
IntakePrey$AttackRate_W[IndexWSpecificInt] <- IntakePrey$IntakePrey_W[IndexWSpecificInt] / (FracW * BodyMassSpOfWSpecificInt * DensSpOfWSpecificInt)
IntakePrey$AttackRate_S[is.na(IntakePrey$AttackRate_S)] <- 0
IntakePrey$AttackRate_W[is.na(IntakePrey$AttackRate_W)] <- 0
# first complete data frame with species densities to ease data handling while drawing the figures
IntakePrey$LowerTaxonBodyMass <- NA; IntakePrey$UpperTaxonBodyMass <- NA
for (Sp in PredList){
BodyMassSp <- SpDensSeason$Body_mass[SpDensSeason$Taxon == Sp]
IntakePrey$UpperTaxonBodyMass[IntakePrey$UpperTaxon == Sp] <- BodyMassSp
PredInfo$BodyMass[PredInfo$Taxon == Sp] <- BodyMassSp
}
for (Sp in PreyList){
BodyMassSp <- SpDensSeason$Body_mass[SpDensSeason$Taxon == Sp]
IntakePrey$LowerTaxonBodyMass[IntakePrey$LowerTaxon == Sp] <- BodyMassSp
}
IntakePrey$PredToPreyBodyMass <- IntakePrey$UpperTaxonBodyMass / IntakePrey$LowerTaxonBodyMass
# now calculate mean killing rates and magnitude of fluctuations
# convert NA into 0
IntakePrey$IntakePrey_S[is.na(IntakePrey$IntakePrey_S)] <- 0
IntakePrey$IntakePrey_W[is.na(IntakePrey$IntakePrey_W)] <- 0
SpDensInitSimu <- subset(SpDensSeason, select = c(Clade, Taxon, Trophic_level, Body_mass, Spring_density))
head(SpDensSeason)
getwd()
setwd(PAR_DIR)
SpDensInitSimu <- subset(SpDensSeason, select = c(CladeBis, Clade, Taxon, Trophic_level, Body_mass, Spring_density))
colnames(SpDensInitSimu) <- c("CladeSimpler", "Clade", "Taxon", "TrophicLevel", "BodyMass_g", "InitDensity_Nha")
IndexMissingDens <- which((is.na(SpDensInitSimu$InitDensity_Nha)) & (!is.na(SpDensInitSimu$BodyMass_g)))
SpDensInitSimu$InitDensity_Nha[IndexMissingDens] <- SpDensSeason$Mean_density[IndexMissingDens]
# for ungulates, take their winter densities
SpDensInitSimu$InitDensity_Nha[SpDensInitSimu$Clade == "Ungulate"] <- SpDensSeason$Winter_density[SpDensInitSimu$Clade == "Ungulate"]
write.csv(SpDensInitSimu, file = "SpDensBiomass.csv", row.names = FALSE, quote = FALSE)
